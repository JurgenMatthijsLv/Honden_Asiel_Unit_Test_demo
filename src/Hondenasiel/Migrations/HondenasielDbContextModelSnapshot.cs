// <auto-generated />
using System;
using Hondenasiel.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hondenasiel.Migrations
{
    [DbContext(typeof(HondenasielDbContext))]
    partial class HondenasielDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hondenasiel.Domain.Asiel.AsielRoot", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Eigenaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Asielen");

                    b.HasData(
                        new
                        {
                            ID = new Guid("de679c55-4c13-4fe7-91b4-69cbce3223a2"),
                            Eigenaar = "Fons De Wolf",
                            Naam = "Asiel Zonnestraal"
                        });
                });

            modelBuilder.Entity("Hondenasiel.Domain.Asiel.Hond", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AsielID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GeslachtID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HeeftStamboom")
                        .HasColumnType("bit");

                    b.Property<Guid?>("KleurID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Leeftijd")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RasID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AsielID");

                    b.HasIndex("GeslachtID");

                    b.HasIndex("KleurID");

                    b.HasIndex("RasID");

                    b.ToTable("Honden");
                });

            modelBuilder.Entity("Hondenasiel.Domain.Ref.Geslacht", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Geslachten");

                    b.HasData(
                        new
                        {
                            ID = new Guid("83671455-8e9a-437c-ae79-9719f20ab6ce"),
                            Code = "M",
                            Omschrijving = "Reu"
                        },
                        new
                        {
                            ID = new Guid("219addc2-54fb-43ba-9e8e-90f4a947b4e3"),
                            Code = "V",
                            Omschrijving = "Teef"
                        });
                });

            modelBuilder.Entity("Hondenasiel.Domain.Ref.Kleur", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kleuren");

                    b.HasData(
                        new
                        {
                            ID = new Guid("1c2c4bb9-9904-4972-a90a-55057da6c90e"),
                            Code = "ZW",
                            Omschrijving = "Zwart"
                        },
                        new
                        {
                            ID = new Guid("aebd52e4-3539-4322-ac59-c150bdd1bfdc"),
                            Code = "WIT",
                            Omschrijving = "Wit"
                        },
                        new
                        {
                            ID = new Guid("4fbb45aa-1757-4aad-a9fd-ea331ec9b7e9"),
                            Code = "BR",
                            Omschrijving = "Bruin"
                        },
                        new
                        {
                            ID = new Guid("8fc42ad8-50f1-4d46-87a4-658375f1f1d2"),
                            Code = "ZW_WIT",
                            Omschrijving = "Zwart / Wit"
                        },
                        new
                        {
                            ID = new Guid("f0716a85-272a-44e6-bf31-f48c00793714"),
                            Code = "BR_WIT",
                            Omschrijving = "Bruin / Wit"
                        },
                        new
                        {
                            ID = new Guid("cc3b3f44-c5a2-443b-9662-c6b61d78b4fa"),
                            Code = "ZW_BR_WIT",
                            Omschrijving = "Zwart / Bruin / Wit"
                        });
                });

            modelBuilder.Entity("Hondenasiel.Domain.Ref.Ras", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rassen");

                    b.HasData(
                        new
                        {
                            ID = new Guid("557d2f48-abf4-4f2d-b5a6-dae6e9edd627"),
                            Code = "BORCOL",
                            Omschrijving = "Border Collie"
                        },
                        new
                        {
                            ID = new Guid("ea05349f-1c7b-4f6f-b260-437447980cae"),
                            Code = "LABRET",
                            Omschrijving = "Labrador Retriever"
                        },
                        new
                        {
                            ID = new Guid("8da44df9-78d4-422d-9a8a-17f842af77af"),
                            Code = "GOLRET",
                            Omschrijving = "Golden Retriever"
                        },
                        new
                        {
                            ID = new Guid("e72fc0cd-5f92-4bf5-a60d-60ffa5bf0304"),
                            Code = "BERSEN",
                            Omschrijving = "Berner Sennenhond"
                        },
                        new
                        {
                            ID = new Guid("656ed191-91cb-4409-83af-6a173fc0a959"),
                            Code = "BEAGLE",
                            Omschrijving = "Beagle"
                        },
                        new
                        {
                            ID = new Guid("90f0f2a8-7e29-441d-a5cf-bd7cb393f7dc"),
                            Code = "BOXER",
                            Omschrijving = "Boxer"
                        },
                        new
                        {
                            ID = new Guid("e0e668c9-2177-449c-8aca-da9b07674a21"),
                            Code = "MECHER",
                            Omschrijving = "Mechelse Herder"
                        },
                        new
                        {
                            ID = new Guid("114b7023-57ee-4308-8ce0-28d1fe4afc47"),
                            Code = "LABDOO",
                            Omschrijving = "Labradoodle"
                        },
                        new
                        {
                            ID = new Guid("95e5c3aa-223f-46a3-8da4-9fc4131a13e5"),
                            Code = "MUNLAN",
                            Omschrijving = "Munsterlander"
                        },
                        new
                        {
                            ID = new Guid("0ab165b7-0a57-47f3-9d45-0c339c10d047"),
                            Code = "DUIHER",
                            Omschrijving = "Duitse Herder"
                        });
                });

            modelBuilder.Entity("Hondenasiel.Domain.Asiel.AsielRoot", b =>
                {
                    b.OwnsOne("Hondenasiel.Domain.Asiel.Adres", "Adres", b1 =>
                        {
                            b1.Property<Guid>("AsielRootID")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Gemeente")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adres_Gemeente");

                            b1.Property<string>("Huisnummer")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adres_Huisnummer");

                            b1.Property<string>("Postcode")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adres_Postcode");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Adres_Straat");

                            b1.HasKey("AsielRootID");

                            b1.ToTable("Asielen");

                            b1.WithOwner()
                                .HasForeignKey("AsielRootID");

                            b1.HasData(
                                new
                                {
                                    AsielRootID = new Guid("de679c55-4c13-4fe7-91b4-69cbce3223a2"),
                                    Gemeente = "Brussel",
                                    Huisnummer = "27",
                                    Postcode = "1000",
                                    Straat = "Gemeentestraat"
                                });
                        });

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Hondenasiel.Domain.Asiel.Hond", b =>
                {
                    b.HasOne("Hondenasiel.Domain.Asiel.AsielRoot", "Asiel")
                        .WithMany()
                        .HasForeignKey("AsielID");

                    b.HasOne("Hondenasiel.Domain.Ref.Geslacht", "Geslacht")
                        .WithMany()
                        .HasForeignKey("GeslachtID");

                    b.HasOne("Hondenasiel.Domain.Ref.Kleur", "Kleur")
                        .WithMany()
                        .HasForeignKey("KleurID");

                    b.HasOne("Hondenasiel.Domain.Ref.Ras", "Ras")
                        .WithMany()
                        .HasForeignKey("RasID");

                    b.Navigation("Asiel");

                    b.Navigation("Geslacht");

                    b.Navigation("Kleur");

                    b.Navigation("Ras");
                });
#pragma warning restore 612, 618
        }
    }
}
